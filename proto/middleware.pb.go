// Code generated by protoc-gen-go. DO NOT EDIT.
// source: middleware.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Data is represented with an unique ID and the body that contains the actual data.
type Data struct {
	Body                 []byte   `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_10e8b4c446957f50, []int{0}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*Data)(nil), "proto.Data")
}

func init() { proto.RegisterFile("middleware.proto", fileDescriptor_10e8b4c446957f50) }

var fileDescriptor_10e8b4c446957f50 = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0xcd, 0x4c, 0x49,
	0xc9, 0x49, 0x2d, 0x4f, 0x2c, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53,
	0x4a, 0x52, 0x5c, 0x2c, 0x2e, 0x89, 0x25, 0x89, 0x42, 0x42, 0x5c, 0x2c, 0x4e, 0xf9, 0x29, 0x95,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x60, 0xb6, 0x91, 0x11, 0x17, 0x97, 0x2f, 0x5c, 0x9b,
	0x90, 0x0a, 0x17, 0x9b, 0x47, 0x62, 0x5e, 0x4a, 0x4e, 0xaa, 0x10, 0x37, 0xc4, 0x08, 0x3d, 0x90,
	0x46, 0x29, 0x64, 0x8e, 0x12, 0x83, 0x93, 0x09, 0x97, 0x4a, 0x72, 0x7e, 0xae, 0x5e, 0x71, 0x7e,
	0x5a, 0x49, 0x7e, 0x5e, 0x66, 0xb2, 0x5e, 0x46, 0x7e, 0x6e, 0x66, 0x5e, 0x7a, 0x41, 0x66, 0x7a,
	0x6a, 0x7e, 0x9e, 0x1e, 0xc2, 0x11, 0x4e, 0x48, 0x26, 0x07, 0x30, 0x26, 0xb1, 0x81, 0xcd, 0x30,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x85, 0x75, 0xa2, 0xa7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MiddlewareClient is the client API for Middleware service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MiddlewareClient interface {
	// Handle the given data and return it.
	Handle(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Data, error)
}

type middlewareClient struct {
	cc *grpc.ClientConn
}

func NewMiddlewareClient(cc *grpc.ClientConn) MiddlewareClient {
	return &middlewareClient{cc}
}

func (c *middlewareClient) Handle(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Data, error) {
	out := new(Data)
	err := c.cc.Invoke(ctx, "/proto.Middleware/Handle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MiddlewareServer is the server API for Middleware service.
type MiddlewareServer interface {
	// Handle the given data and return it.
	Handle(context.Context, *Data) (*Data, error)
}

// UnimplementedMiddlewareServer can be embedded to have forward compatible implementations.
type UnimplementedMiddlewareServer struct {
}

func (*UnimplementedMiddlewareServer) Handle(ctx context.Context, req *Data) (*Data, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handle not implemented")
}

func RegisterMiddlewareServer(s *grpc.Server, srv MiddlewareServer) {
	s.RegisterService(&_Middleware_serviceDesc, srv)
}

func _Middleware_Handle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MiddlewareServer).Handle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Middleware/Handle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MiddlewareServer).Handle(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

var _Middleware_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Middleware",
	HandlerType: (*MiddlewareServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handle",
			Handler:    _Middleware_Handle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "middleware.proto",
}
