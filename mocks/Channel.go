// Code generated by mockery v2.45.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Channel is an autogenerated mock type for the Channel type
type Channel struct {
	mock.Mock
}

// Ack provides a mock function with given fields: tag, multiple
func (_m *Channel) Ack(tag uint64, multiple bool) error {
	ret := _m.Called(tag, multiple)

	if len(ret) == 0 {
		panic("no return value specified for Ack")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(uint64, bool) error); ok {
		r0 = rf(tag, multiple)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *Channel) Close() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Close")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Nack provides a mock function with given fields: tag, multiple, requeue
func (_m *Channel) Nack(tag uint64, multiple bool, requeue bool) error {
	ret := _m.Called(tag, multiple, requeue)

	if len(ret) == 0 {
		panic("no return value specified for Nack")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(uint64, bool, bool) error); ok {
		r0 = rf(tag, multiple, requeue)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewChannel creates a new instance of Channel. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChannel(t interface {
	mock.TestingT
	Cleanup(func())
}) *Channel {
	mock := &Channel{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
